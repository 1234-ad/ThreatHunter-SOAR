/*
    ThreatHunter-SOAR YARA Rules
    Comprehensive malware detection rules for SOC operations
*/

import "pe"
import "math"
import "hash"

// ============================================================================
// POWERSHELL ATTACK DETECTION
// ============================================================================

rule Suspicious_PowerShell_Commands
{
    meta:
        description = "Detects suspicious PowerShell command patterns"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1059.001"
        category = "execution"
        
    strings:
        $ps1 = "powershell" nocase
        $ps2 = "pwsh" nocase
        
        // Encoded commands
        $enc1 = "-EncodedCommand" nocase
        $enc2 = "-enc" nocase
        $enc3 = "-e " nocase
        
        // Execution policy bypass
        $bypass1 = "-ExecutionPolicy Bypass" nocase
        $bypass2 = "-ep bypass" nocase
        $bypass3 = "Set-ExecutionPolicy Unrestricted" nocase
        
        // Hidden execution
        $hidden1 = "-WindowStyle Hidden" nocase
        $hidden2 = "-w hidden" nocase
        $hidden3 = "-WindowStyle Minimized" nocase
        
        // Download and execute patterns
        $download1 = "DownloadString" nocase
        $download2 = "DownloadFile" nocase
        $download3 = "WebClient" nocase
        $download4 = "Invoke-WebRequest" nocase
        $download5 = "wget" nocase
        $download6 = "curl" nocase
        
        // Execution patterns
        $exec1 = "Invoke-Expression" nocase
        $exec2 = "IEX" nocase
        $exec3 = "Invoke-Command" nocase
        $exec4 = "Start-Process" nocase
        
        // Obfuscation patterns
        $obfusc1 = "FromBase64String" nocase
        $obfusc2 = "Convert::FromBase64String" nocase
        $obfusc3 = "[System.Text.Encoding]::UTF8.GetString" nocase
        
    condition:
        ($ps1 or $ps2) and (
            ($enc1 or $enc2 or $enc3) or
            ($bypass1 or $bypass2 or $bypass3) or
            ($hidden1 or $hidden2 or $hidden3) or
            (($download1 or $download2 or $download3 or $download4 or $download5 or $download6) and 
             ($exec1 or $exec2 or $exec3 or $exec4)) or
            ($obfusc1 or $obfusc2 or $obfusc3)
        )
}

rule PowerShell_Empire_Indicators
{
    meta:
        description = "Detects PowerShell Empire framework indicators"
        author = "ThreatHunter-SOAR"
        severity = "CRITICAL"
        mitre_attack = "T1059.001"
        category = "execution"
        
    strings:
        $empire1 = "powershell -noP -sta -w 1 -enc" nocase
        $empire2 = "System.Net.WebClient).DownloadString" nocase
        $empire3 = "invoke-empire" nocase
        $empire4 = "Get-Empire" nocase
        $empire5 = "Empire.ps1" nocase
        $empire6 = "/admin/get.php" nocase
        $empire7 = "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"
        
    condition:
        any of them
}

// ============================================================================
// NETWORK INTRUSION DETECTION
// ============================================================================

rule Suspicious_Network_Connections
{
    meta:
        description = "Detects suspicious network connection patterns"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        mitre_attack = "T1071"
        category = "command_and_control"
        
    strings:
        // Common C2 ports
        $port1 = ":4444"
        $port2 = ":8080"
        $port3 = ":9999"
        $port4 = ":1337"
        $port5 = ":31337"
        $port6 = ":6666"
        $port7 = ":7777"
        
        // Suspicious domains
        $domain1 = ".tk" nocase
        $domain2 = ".ml" nocase
        $domain3 = ".ga" nocase
        $domain4 = ".cf" nocase
        $domain5 = "duckdns.org" nocase
        $domain6 = "no-ip.org" nocase
        
        // IP patterns (private to public communication)
        $ip_pattern = /\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b/
        
    condition:
        ($ip_pattern and (any of ($port*))) or
        any of ($domain*)
}

rule Cobalt_Strike_Beacon
{
    meta:
        description = "Detects Cobalt Strike beacon indicators"
        author = "ThreatHunter-SOAR"
        severity = "CRITICAL"
        mitre_attack = "T1071.001"
        category = "command_and_control"
        
    strings:
        $beacon1 = "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)"
        $beacon2 = "Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 5.2)"
        $beacon3 = "/dpixel" nocase
        $beacon4 = "/pixel.gif" nocase
        $beacon5 = "/match" nocase
        $beacon6 = "/activity" nocase
        $beacon7 = "/__utm.gif" nocase
        $beacon8 = "/submit.php" nocase
        
        // Cobalt Strike default certificates
        $cert1 = "Major Cobalt Strike" nocase
        $cert2 = "AdvancedThreatAnalytics" nocase
        
    condition:
        any of them
}

// ============================================================================
// MALWARE FAMILY DETECTION
// ============================================================================

rule Generic_Trojan_Indicators
{
    meta:
        description = "Generic trojan behavior indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1055"
        category = "defense_evasion"
        
    strings:
        // Process injection
        $inject1 = "VirtualAllocEx" nocase
        $inject2 = "WriteProcessMemory" nocase
        $inject3 = "CreateRemoteThread" nocase
        $inject4 = "SetThreadContext" nocase
        $inject5 = "ResumeThread" nocase
        
        // Registry manipulation
        $reg1 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        $reg2 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce" nocase
        $reg3 = "SYSTEM\\CurrentControlSet\\Services" nocase
        
        // File operations
        $file1 = "CreateFileA" nocase
        $file2 = "CreateFileW" nocase
        $file3 = "WriteFile" nocase
        $file4 = "DeleteFileA" nocase
        $file5 = "DeleteFileW" nocase
        
    condition:
        (2 of ($inject*)) or
        (any of ($reg*) and any of ($file*))
}

rule Ransomware_Indicators
{
    meta:
        description = "Generic ransomware behavior indicators"
        author = "ThreatHunter-SOAR"
        severity = "CRITICAL"
        mitre_attack = "T1486"
        category = "impact"
        
    strings:
        // File extensions
        $ext1 = ".encrypted" nocase
        $ext2 = ".locked" nocase
        $ext3 = ".crypto" nocase
        $ext4 = ".crypt" nocase
        $ext5 = ".enc" nocase
        
        // Ransom notes
        $note1 = "your files have been encrypted" nocase
        $note2 = "pay the ransom" nocase
        $note3 = "bitcoin" nocase
        $note4 = "decryption key" nocase
        $note5 = "README_FOR_DECRYPT" nocase
        $note6 = "HOW_TO_DECRYPT" nocase
        
        // Crypto functions
        $crypto1 = "CryptEncrypt" nocase
        $crypto2 = "CryptDecrypt" nocase
        $crypto3 = "CryptGenKey" nocase
        $crypto4 = "CryptAcquireContext" nocase
        
    condition:
        (any of ($ext*) and any of ($note*)) or
        (2 of ($crypto*) and any of ($note*))
}

rule Keylogger_Indicators
{
    meta:
        description = "Keylogger behavior indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1056.001"
        category = "credential_access"
        
    strings:
        $hook1 = "SetWindowsHookEx" nocase
        $hook2 = "GetAsyncKeyState" nocase
        $hook3 = "GetKeyState" nocase
        $hook4 = "MapVirtualKey" nocase
        $hook5 = "GetKeyboardState" nocase
        
        $log1 = "keylog" nocase
        $log2 = "keystroke" nocase
        $log3 = "password" nocase
        $log4 = "credential" nocase
        
    condition:
        any of ($hook*) and any of ($log*)
}

// ============================================================================
// PERSISTENCE MECHANISMS
// ============================================================================

rule Registry_Persistence
{
    meta:
        description = "Registry-based persistence mechanisms"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        mitre_attack = "T1547.001"
        category = "persistence"
        
    strings:
        $run1 = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        $run2 = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        $run3 = "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        $run4 = "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        
        $service1 = "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services" nocase
        $service2 = "HKLM\\SYSTEM\\CurrentControlSet\\Services" nocase
        
        $winlogon1 = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon" nocase
        $winlogon2 = "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon" nocase
        
    condition:
        any of them
}

rule Scheduled_Task_Persistence
{
    meta:
        description = "Scheduled task persistence indicators"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        mitre_attack = "T1053.005"
        category = "persistence"
        
    strings:
        $schtasks1 = "schtasks" nocase
        $schtasks2 = "/create" nocase
        $schtasks3 = "/sc" nocase
        $schtasks4 = "/tn" nocase
        $schtasks5 = "/tr" nocase
        
        $at1 = "at.exe" nocase
        $at2 = "at " nocase
        
        $taskschd1 = "taskschd.msc" nocase
        $taskschd2 = "Task Scheduler" nocase
        
    condition:
        ($schtasks1 and 2 of ($schtasks*)) or
        any of ($at*) or
        any of ($taskschd*)
}

// ============================================================================
// LATERAL MOVEMENT
// ============================================================================

rule WMI_Lateral_Movement
{
    meta:
        description = "WMI-based lateral movement indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1047"
        category = "lateral_movement"
        
    strings:
        $wmi1 = "wmic" nocase
        $wmi2 = "/node:" nocase
        $wmi3 = "process call create" nocase
        $wmi4 = "Win32_Process" nocase
        $wmi5 = "Create" nocase
        
        $winrm1 = "winrm" nocase
        $winrm2 = "Enter-PSSession" nocase
        $winrm3 = "Invoke-Command" nocase
        $winrm4 = "-ComputerName" nocase
        
    condition:
        ($wmi1 and ($wmi2 or $wmi3)) or
        ($wmi4 and $wmi5) or
        ($winrm1 and ($winrm2 or $winrm3 or $winrm4))
}

rule PSExec_Indicators
{
    meta:
        description = "PSExec lateral movement indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1021.002"
        category = "lateral_movement"
        
    strings:
        $psexec1 = "psexec" nocase
        $psexec2 = "\\\\127.0.0.1\\ADMIN$" nocase
        $psexec3 = "\\\\localhost\\ADMIN$" nocase
        $psexec4 = "PSEXESVC" nocase
        $psexec5 = "-accepteula" nocase
        $psexec6 = "-s " nocase
        $psexec7 = "-d " nocase
        $psexec8 = "-c " nocase
        
    condition:
        $psexec1 and any of ($psexec2, $psexec3, $psexec4, $psexec5, $psexec6, $psexec7, $psexec8)
}

// ============================================================================
// DATA EXFILTRATION
// ============================================================================

rule Data_Exfiltration_Tools
{
    meta:
        description = "Data exfiltration tool indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1041"
        category = "exfiltration"
        
    strings:
        // Archive tools
        $archive1 = "7z.exe" nocase
        $archive2 = "winrar.exe" nocase
        $archive3 = "zip.exe" nocase
        $archive4 = "rar.exe" nocase
        
        // Upload tools
        $upload1 = "ftp.exe" nocase
        $upload2 = "sftp.exe" nocase
        $upload3 = "scp.exe" nocase
        $upload4 = "rsync.exe" nocase
        
        // Cloud storage
        $cloud1 = "dropbox" nocase
        $cloud2 = "googledrive" nocase
        $cloud3 = "onedrive" nocase
        $cloud4 = "mega.nz" nocase
        $cloud5 = "wetransfer" nocase
        
        // Suspicious file patterns
        $file1 = "passwords.txt" nocase
        $file2 = "credentials.txt" nocase
        $file3 = "database.sql" nocase
        $file4 = "backup.zip" nocase
        
    condition:
        (any of ($archive*) and any of ($upload*)) or
        (any of ($cloud*) and any of ($file*))
}

// ============================================================================
// LIVING OFF THE LAND BINARIES (LOLBins)
// ============================================================================

rule Suspicious_LOLBin_Usage
{
    meta:
        description = "Suspicious usage of Living off the Land binaries"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        mitre_attack = "T1218"
        category = "defense_evasion"
        
    strings:
        // Regsvr32
        $regsvr1 = "regsvr32" nocase
        $regsvr2 = "/s " nocase
        $regsvr3 = "/u " nocase
        $regsvr4 = "/i:" nocase
        $regsvr5 = "scrobj.dll" nocase
        
        // Rundll32
        $rundll1 = "rundll32" nocase
        $rundll2 = "javascript:" nocase
        $rundll3 = "vbscript:" nocase
        $rundll4 = "shell32.dll" nocase
        
        // Mshta
        $mshta1 = "mshta" nocase
        $mshta2 = "http://" nocase
        $mshta3 = "https://" nocase
        $mshta4 = ".hta" nocase
        
        // Certutil
        $certutil1 = "certutil" nocase
        $certutil2 = "-urlcache" nocase
        $certutil3 = "-split" nocase
        $certutil4 = "-f" nocase
        $certutil5 = "-decode" nocase
        
    condition:
        ($regsvr1 and any of ($regsvr2, $regsvr3, $regsvr4, $regsvr5)) or
        ($rundll1 and any of ($rundll2, $rundll3, $rundll4)) or
        ($mshta1 and any of ($mshta2, $mshta3, $mshta4)) or
        ($certutil1 and any of ($certutil2, $certutil3, $certutil4, $certutil5))
}

// ============================================================================
// CREDENTIAL ACCESS
// ============================================================================

rule Credential_Dumping_Tools
{
    meta:
        description = "Credential dumping tool indicators"
        author = "ThreatHunter-SOAR"
        severity = "CRITICAL"
        mitre_attack = "T1003"
        category = "credential_access"
        
    strings:
        // Mimikatz
        $mimikatz1 = "mimikatz" nocase
        $mimikatz2 = "sekurlsa::logonpasswords" nocase
        $mimikatz3 = "lsadump::sam" nocase
        $mimikatz4 = "privilege::debug" nocase
        $mimikatz5 = "gentilkiwi" nocase
        
        // Other tools
        $pwdump1 = "pwdump" nocase
        $pwdump2 = "fgdump" nocase
        $pwdump3 = "gsecdump" nocase
        
        // LSASS access
        $lsass1 = "lsass.exe" nocase
        $lsass2 = "procdump" nocase
        $lsass3 = "MiniDumpWriteDump" nocase
        
    condition:
        any of ($mimikatz*) or
        any of ($pwdump*) or
        ($lsass1 and ($lsass2 or $lsass3))
}

// ============================================================================
// ANTI-ANALYSIS TECHNIQUES
// ============================================================================

rule Anti_Analysis_Techniques
{
    meta:
        description = "Anti-analysis and evasion techniques"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        mitre_attack = "T1497"
        category = "defense_evasion"
        
    strings:
        // VM detection
        $vm1 = "VMware" nocase
        $vm2 = "VirtualBox" nocase
        $vm3 = "VBOX" nocase
        $vm4 = "QEMU" nocase
        $vm5 = "Xen" nocase
        
        // Debugger detection
        $debug1 = "IsDebuggerPresent" nocase
        $debug2 = "CheckRemoteDebuggerPresent" nocase
        $debug3 = "OutputDebugString" nocase
        $debug4 = "FindWindow" nocase
        
        // Sleep/delay
        $sleep1 = "Sleep(" nocase
        $sleep2 = "WaitForSingleObject" nocase
        $sleep3 = "GetTickCount" nocase
        
        // Process enumeration
        $proc1 = "CreateToolhelp32Snapshot" nocase
        $proc2 = "Process32First" nocase
        $proc3 = "Process32Next" nocase
        
    condition:
        (2 of ($vm*)) or
        (2 of ($debug*)) or
        (any of ($sleep*) and any of ($proc*))
}

// ============================================================================
// FILELESS MALWARE
// ============================================================================

rule Fileless_Malware_Indicators
{
    meta:
        description = "Fileless malware execution indicators"
        author = "ThreatHunter-SOAR"
        severity = "HIGH"
        mitre_attack = "T1055"
        category = "defense_evasion"
        
    strings:
        // Memory execution
        $mem1 = "VirtualAlloc" nocase
        $mem2 = "VirtualProtect" nocase
        $mem3 = "CreateThread" nocase
        $mem4 = "QueueUserAPC" nocase
        
        // Reflective DLL loading
        $dll1 = "LoadLibrary" nocase
        $dll2 = "GetProcAddress" nocase
        $dll3 = "VirtualAllocEx" nocase
        $dll4 = "WriteProcessMemory" nocase
        
        // PowerShell in memory
        $ps1 = "System.Reflection.Assembly" nocase
        $ps2 = "Load(" nocase
        $ps3 = "GetType(" nocase
        $ps4 = "GetMethod(" nocase
        $ps5 = "Invoke(" nocase
        
    condition:
        (2 of ($mem*)) or
        (3 of ($dll*)) or
        (3 of ($ps*))
}

// ============================================================================
// SUSPICIOUS FILE CHARACTERISTICS
// ============================================================================

rule Suspicious_PE_Characteristics
{
    meta:
        description = "Suspicious PE file characteristics"
        author = "ThreatHunter-SOAR"
        severity = "MEDIUM"
        category = "malware"
        
    condition:
        pe.is_pe and
        (
            // Unusual entry point
            pe.entry_point < pe.sections[0].raw_data_offset or
            pe.entry_point > (pe.sections[pe.number_of_sections-1].raw_data_offset + pe.sections[pe.number_of_sections-1].raw_data_size) or
            
            // High entropy (packed/encrypted)
            math.entropy(0, filesize) > 7.0 or
            
            // Suspicious imports
            pe.imports("kernel32.dll", "VirtualAlloc") and
            pe.imports("kernel32.dll", "VirtualProtect") and
            pe.imports("kernel32.dll", "CreateThread") or
            
            // No version info
            not pe.version_info["CompanyName"] or
            
            // Suspicious sections
            for any section in pe.sections : (
                section.name == ".UPX0" or
                section.name == ".UPX1" or
                section.name == ".packed" or
                section.characteristics & pe.SECTION_MEM_EXECUTE and
                section.characteristics & pe.SECTION_MEM_WRITE
            )
        )
}